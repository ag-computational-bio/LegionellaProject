apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: website
    app.kubernetes.io/part-of: legionella
    app.kubernetes.io/version: v0.1.0
  name: legionellawebsite
  namespace: legionellamarburg
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: website
      app.kubernetes.io/part-of: legionella
      app.kubernetes.io/version: v0.1.0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: website
        app.kubernetes.io/part-of: legionella
        app.kubernetes.io/version: v0.1.0
    spec:
      containers:
        - env:
          - name: Oauth2ClientSecret
            valueFrom:
              secretKeyRef:
                key: secret
                name: oauth2client
          - name: APIKey
            valueFrom:
              secretKeyRef:
                key: BiodataDBAPIKey
                name: api-key
          image: foo
          name: website
          ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: website
  namespace: legionellamarburg
spec:
  selector:
    app.kubernetes.io/name: website
    app.kubernetes.io/part-of: legionella
    app.kubernetes.io/version: v0.1.0
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: website
  namespace: legionellamarburg
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: legionellaproject.ingress.rancher2.computational.bio
    http:
      paths:
      - backend:
          serviceName: website
          servicePort: 8080
        path: /
  tls: # < placing a host in the TLS config will indicate a certificate should be created
  - hosts:
    - legionellaproject.biodatadb.ingress.rancher2.computational.bio
    secretName: ui-legionellaproject-stable-private-cert # < cert-manager will store the created certificate in this secret.
---
